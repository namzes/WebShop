@using System.Text
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Server
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@inject IHttpClientFactory HttpClientFactory
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


<div class="form-container">
	<h3>Login</h3>
	<input class="text-input" type="email" placeholder="Email" @bind="@_email" />
	<input class="text-input" type="password" placeholder="Password" @bind="@_password" />
	<button class="submit-button" @onclick="HandleLogin">Login</button>
</div>


@code {
	private string _email = string.Empty;
	private string _password = string.Empty;

	[Parameter] public EventCallback<bool> OnLoginStateChanged { get; set; }

	private async Task HandleLogin()
	{
		if (string.IsNullOrWhiteSpace(_email) || string.IsNullOrWhiteSpace(_password))
		{
			return;
		}

		var json = JsonSerializer.Serialize(new { email = _email, password = _password });
		var content = new StringContent(json, Encoding.UTF8, "application/json");

		var client = HttpClientFactory.CreateClient("MinimalApi");
		HttpResponseMessage response = await client.PostAsync("/Account/login?useCookies=true", content);

		if (response.IsSuccessStatusCode)
		{
			if (response.Headers.TryGetValues("Set-Cookie", out var cookieHeaders))
			{
				foreach (var cookieHeader in cookieHeaders)
				{
					Console.WriteLine($"Set-Cookie: {cookieHeader}");
				}
			}
			NavigationManager.NavigateTo("/", forceLoad: true);

		}
	}
}
